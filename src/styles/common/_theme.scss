@import './variables';

/*
 * THEME
 * accessible to all component scss through importing ./utils then using get-theme(colors, lighten, 1) or other helpers
 * any value we want overwritable by the consumer needs to be an external variable defined in ./_variables $sl-defaults then referenced here
 * this file should never be imported directly outside of ./utils
 */

// colors taken from consumer variables
$var-black: map-deep-get($sl-variables, colors, black);
$var-white: map-deep-get($sl-variables, colors, white);
$var-gray: map-deep-get($sl-variables, colors, gray);
$var-info: map-deep-get($sl-variables, colors, info);
$var-success: map-deep-get($sl-variables, colors, success);
$var-warning: map-deep-get($sl-variables, colors, warning);
$var-danger: map-deep-get($sl-variables, colors, danger);
$var-primary: map-deep-get($sl-variables, colors, primary);
$var-secondary: map-deep-get($sl-variables, colors, secondary);

$sl-theme: (
  namespace: map-deep-get($sl-variables, namespace),
  colors: (
    transparent: transparent,
    black: $var-black,
    white: $var-white,
    lighten: (
      1: rgba(255, 255, 255, 0.02),
      2: rgba(255, 255, 255, 0.5),
      3: rgba(255, 255, 255, 0.1),
      4: rgba(255, 255, 255, 0.15),
      5: rgba(255, 255, 255, 0.25),
      6: rgba(255, 255, 255, 0.35),
      7: rgba(255, 255, 255, 0.5),
      8: rgba(255, 255, 255, 0.6),
      9: rgba(255, 255, 255, 0.8),
    ),
    darken: (
      1: rgba(0, 0, 0, 0.03),
      2: rgba(0, 0, 0, 0.6),
      3: rgba(0, 0, 0, 0.1),
      4: rgba(0, 0, 0, 0.15),
      5: rgba(0, 0, 0, 0.25),
      6: rgba(0, 0, 0, 0.35),
      7: rgba(0, 0, 0, 0.5),
      8: rgba(0, 0, 0, 0.6),
      9: rgba(0, 0, 0, 0.8),
    ),
    gray: (
      1: lighten($var-gray, 50%),
      2: lighten($var-gray, 40%),
      3: lighten($var-gray, 30%),
      4: lighten($var-gray, 20%),
      5: lighten($var-gray, 10%),
      6: $var-gray,
      7: darken($var-gray, 10%),
      8: darken($var-gray, 20%),
      9: darken($var-gray, 30%),
    ),
    info: (
      1: lighten($var-info, 50%),
      2: lighten($var-info, 40%),
      3: lighten($var-info, 30%),
      4: lighten($var-info, 20%),
      5: lighten($var-info, 10%),
      6: $var-info,
      7: darken($var-info, 10%),
      8: darken($var-info, 20%),
      9: darken($var-info, 30%),
    ),
    success: (
      1: lighten($var-success, 50%),
      2: lighten($var-success, 40%),
      3: lighten($var-success, 30%),
      4: lighten($var-success, 20%),
      5: lighten($var-success, 10%),
      6: $var-success,
      7: darken($var-success, 10%),
      8: darken($var-success, 20%),
      9: darken($var-success, 30%),
    ),
    warning: (
      1: lighten($var-warning, 50%),
      2: lighten($var-warning, 40%),
      3: lighten($var-warning, 30%),
      4: lighten($var-warning, 20%),
      5: lighten($var-warning, 10%),
      6: $var-warning,
      7: darken($var-warning, 10%),
      8: darken($var-warning, 20%),
      9: darken($var-warning, 30%),
    ),
    danger: (
      1: lighten($var-danger, 50%),
      2: lighten($var-danger, 40%),
      3: lighten($var-danger, 30%),
      4: lighten($var-danger, 20%),
      5: lighten($var-danger, 10%),
      6: $var-danger,
      7: darken($var-danger, 10%),
      8: darken($var-danger, 20%),
      9: darken($var-danger, 30%),
    ),
    primary: (
      1: lighten($var-primary, 50%),
      2: lighten($var-primary, 40%),
      3: lighten($var-primary, 30%),
      4: lighten($var-primary, 20%),
      5: lighten($var-primary, 10%),
      6: $var-primary,
      7: darken($var-primary, 10%),
      8: darken($var-primary, 20%),
      9: darken($var-primary, 30%),
    ),
    secondary: (
      1: lighten($var-secondary, 50%),
      2: lighten($var-secondary, 40%),
      3: lighten($var-secondary, 30%),
      4: lighten($var-secondary, 20%),
      5: lighten($var-secondary, 10%),
      6: $var-secondary,
      7: darken($var-secondary, 10%),
      8: darken($var-secondary, 20%),
      9: darken($var-secondary, 30%),
    ),
  ),
  fontSize: (
    xs: 10px,
    sm: 12px,
    base: 14px,
    lg: 16px,
    xl: 20px,
    '2xl': 24px,
    '3xl': 28px,
    '4xl': 32px,
    '5xl': 40px,
    '6xl': 50px,
  ),
  borderRadius: (
    none: 0,
    sm: 1px,
    default: 3px,
    lg: 5px,
    full: 9999px,
  ),
  boxShadow: (
    default: 0px 1px 2px rgba(0, 0, 0, 0.3),
    md: 0px 4px 4px rgba(0, 0, 0, 0.5),
    lg: 0px 5px 5px rgba(0, 0, 0, 0.6),
    inner: inset 0 2px 4px 0 rgba(0, 0, 0, 0.06),
    outline: 0 0 0 3px rgba(66, 153, 225, 0.5),
    none: none,
  ),
  fontFamily: (
    sans: (
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      'Helvetica Neue',
      Arial,
      'Noto Sans',
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji',
      'Segoe UI Symbol',
      'Noto Color Emoji',
    ),
    serif: (
      Georgia,
      Cambria,
      'Times New Roman',
      Times,
      serif,
    ),
    mono: (
      Menlo,
      Monaco,
      Consolas,
      'Liberation Mono',
      'Courier New',
      monospace,
    ),
  ),
);

// extend theme with extraneous things passed into $sl-variables
// examples include new variables defined by the consumer
@each $key, $value in $sl-variables {
  @if not map-has-key($sl-theme, $key) {
    $sl-theme: map-extend(
      $sl-theme,
      (
        $key: $value,
      )
    );
  }
}
